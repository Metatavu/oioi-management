// tslint:disable
// eslint-disable
/**
 * OiOi content management API
 * OiOi content management API spec
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    KeyValueProperty,
    KeyValuePropertyFromJSON,
    KeyValuePropertyFromJSONTyped,
    KeyValuePropertyToJSON,
} from './';

/**
 * 
 * @export
 * @interface Device
 */
export interface Device {
    /**
     * Device id.
     * @type {string}
     * @memberof Device
     */
    readonly id?: string;
    /**
     * Device name.
     * @type {string}
     * @memberof Device
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Device
     */
    api_key: string;
    /**
     * 
     * @type {Array<KeyValueProperty>}
     * @memberof Device
     */
    metas?: Array<KeyValueProperty>;
    /**
     * Creation time
     * @type {Date}
     * @memberof Device
     */
    readonly created_at?: Date;
    /**
     * Last modification time
     * @type {Date}
     * @memberof Device
     */
    readonly modified_at?: Date;
    /**
     * 
     * @type {string}
     * @memberof Device
     */
    creator_id?: string;
    /**
     * 
     * @type {string}
     * @memberof Device
     */
    last_modifier_id?: string;
}

export function DeviceFromJSON(json: any): Device {
    return DeviceFromJSONTyped(json, false);
}

export function DeviceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Device {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': json['name'],
        'api_key': json['apiKey'],
        'metas': !exists(json, 'metas') ? undefined : (json['metas'] as Array<any>).map(KeyValuePropertyFromJSON),
        'created_at': !exists(json, 'createdAt') ? undefined : new Date(json['createdAt']),
        'modified_at': !exists(json, 'modifiedAt') ? undefined : new Date(json['modifiedAt']),
        'creator_id': !exists(json, 'creatorId') ? undefined : json['creatorId'],
        'last_modifier_id': !exists(json, 'lastModifierId') ? undefined : json['lastModifierId'],
    };
}

export function DeviceToJSON(value?: Device | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'apiKey': value.api_key,
        'metas': value.metas == null ? undefined : (value.metas as Array<any>).map(KeyValuePropertyToJSON),
        'creatorId': value.creator_id,
        'lastModifierId': value.last_modifier_id,
    };
}


