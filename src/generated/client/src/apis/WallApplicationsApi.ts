/* tslint:disable */
/* eslint-disable */
/**
 * OiOi content management API
 * OiOi content management API spec
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    ErrorResponse,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    WallApplication,
    WallApplicationFromJSON,
    WallApplicationToJSON,
} from '../models';

export interface GetApplicationJsonRequest {
    applicationId: string;
}

/**
 * 
 */
export class WallApplicationsApi extends runtime.BaseAPI {

    /**
     * Returns application wall JSON
     * Returns application wall JSON
     */
    async getApplicationJsonRaw(requestParameters: GetApplicationJsonRequest): Promise<runtime.ApiResponse<WallApplication>> {
        if (requestParameters.applicationId === null || requestParameters.applicationId === undefined) {
            throw new runtime.RequiredError('applicationId','Required parameter requestParameters.applicationId was null or undefined when calling getApplicationJson.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["X-API-KEY"] = this.configuration.apiKey("X-API-KEY"); // ApiKeyAuth authentication
        }

        const response = await this.request({
            path: `/v1/application/{applicationId}`.replace(`{${"applicationId"}}`, encodeURIComponent(String(requestParameters.applicationId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => WallApplicationFromJSON(jsonValue));
    }

    /**
     * Returns application wall JSON
     * Returns application wall JSON
     */
    async getApplicationJson(requestParameters: GetApplicationJsonRequest): Promise<WallApplication> {
        const response = await this.getApplicationJsonRaw(requestParameters);
        return await response.value();
    }

}
