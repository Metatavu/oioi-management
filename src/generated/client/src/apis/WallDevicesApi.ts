/* tslint:disable */
/* eslint-disable */
/**
 * OiOi content management API
 * OiOi content management API spec
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    ErrorResponse,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    WallDevice,
    WallDeviceFromJSON,
    WallDeviceToJSON,
} from '../models';

export interface GetDeviceJsonRequest {
    deviceId: string;
}

/**
 * 
 */
export class WallDevicesApi extends runtime.BaseAPI {

    /**
     * Returns device wall JSON
     * Returns device wall JSON
     */
    async getDeviceJsonRaw(requestParameters: GetDeviceJsonRequest): Promise<runtime.ApiResponse<WallDevice>> {
        if (requestParameters.deviceId === null || requestParameters.deviceId === undefined) {
            throw new runtime.RequiredError('deviceId','Required parameter requestParameters.deviceId was null or undefined when calling getDeviceJson.');
        }

        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["X-API-KEY"] = this.configuration.apiKey("X-API-KEY"); // ApiKeyAuth authentication
        }

        const response = await this.request({
            path: `/v1/device/{deviceId}`.replace(`{${"deviceId"}}`, encodeURIComponent(String(requestParameters.deviceId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => WallDeviceFromJSON(jsonValue));
    }

    /**
     * Returns device wall JSON
     * Returns device wall JSON
     */
    async getDeviceJson(requestParameters: GetDeviceJsonRequest): Promise<WallDevice> {
        const response = await this.getDeviceJsonRaw(requestParameters);
        return await response.value();
    }

}
