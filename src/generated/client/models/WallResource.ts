/* tslint:disable */
/* eslint-disable */
/**
 * OiOi content management API
 * OiOi content management API spec
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ResourceType,
    ResourceTypeFromJSON,
    ResourceTypeFromJSONTyped,
    ResourceTypeToJSON,
} from './';

/**
 * 
 * @export
 * @interface WallResource
 */
export interface WallResource {
    /**
     * 
     * @type {string}
     * @memberof WallResource
     */
    slug: string;
    /**
     * 
     * @type {ResourceType}
     * @memberof WallResource
     */
    type: ResourceType;
    /**
     * 
     * @type {string}
     * @memberof WallResource
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof WallResource
     */
    data?: string;
    /**
     * 
     * @type {Array<WallResource>}
     * @memberof WallResource
     */
    children: Array<WallResource>;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof WallResource
     */
    styles: { [key: string]: string; };
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof WallResource
     */
    properties: { [key: string]: string; };
    /**
     * Last modification time
     * @type {Date}
     * @memberof WallResource
     */
    modifiedAt: Date;
}

export function WallResourceFromJSON(json: any): WallResource {
    return WallResourceFromJSONTyped(json, false);
}

export function WallResourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): WallResource {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'slug': json['slug'],
        'type': ResourceTypeFromJSON(json['type']),
        'name': json['name'],
        'data': !exists(json, 'data') ? undefined : json['data'],
        'children': ((json['children'] as Array<any>).map(WallResourceFromJSON)),
        'styles': json['styles'],
        'properties': json['properties'],
        'modifiedAt': (new Date(json['modifiedAt'])),
    };
}

export function WallResourceToJSON(value?: WallResource | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'slug': value.slug,
        'type': ResourceTypeToJSON(value.type),
        'name': value.name,
        'data': value.data,
        'children': ((value.children as Array<any>).map(WallResourceToJSON)),
        'styles': value.styles,
        'properties': value.properties,
        'modifiedAt': (value.modifiedAt.toISOString()),
    };
}


